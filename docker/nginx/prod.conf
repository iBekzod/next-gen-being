server {
    listen 80;
    server_name nextgenbeing.com www.nextgenbeing.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name nextgenbeing.com www.nextgenbeing.com;
    root /home/deploy/projects/nextgenbeing/public;
    index index.php index.html;

    # SSL Configuration (Let's Encrypt via Cloudflare)
    ssl_certificate /etc/ssl/certs/nextgenbeing.com.pem;
    ssl_certificate_key /etc/ssl/private/nextgenbeing.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.lemonsqueezy.com https://www.google-analytics.com; frame-src 'self' https://app.lemonsqueezy.com;" always;

    # File upload limits
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;

    # Logging
    error_log /var/log/nginx/nextgenbeing_error.log warn;
    access_log /var/log/nginx/nextgenbeing_access.log combined buffer=16k flush=1m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;

    # Brotli compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    # Main location
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handling
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Performance tuning
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 300s;
        fastcgi_read_timeout 300s;
    }

    # Rate limiting for login/register
    location ~ ^/(login|register|password) {
        limit_req zone=login burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # API rate limiting
    location /api/ {
        limit_req zone=api burst=100 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Static files with long-term caching
    location ~* \.(css|js|woff|woff2|ttf|eot|svg|ico)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;

        # Enable HTTP/2 server push for critical resources
        location ~* \.css$ {
            add_header Link "</css/app.css>; rel=preload; as=style" always;
        }
    }

    # Images with medium-term caching
    location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # SEO files
    location = /sitemap.xml {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri /index.php?$query_string;
    }

    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        try_files $uri /index.php?$query_string;
    }

    location = /ads.txt {
        expires 1d;
        add_header Cache-Control "public";
    }

    # Favicon
    location = /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # Apple touch icon
    location = /apple-touch-icon.png {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # Deny access to sensitive files
    location ~ /\.(env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    location ~ /(\.user\.ini|web\.config|composer\.(json|lock)|package\.(json|lock)) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Block bad bots
    location ~* (bot|crawler|spider|scraper) {
        if ($http_user_agent ~* (AhrefsBot|MJ12bot|SemrushBot)) {
            return 403;
        }
    }
}
